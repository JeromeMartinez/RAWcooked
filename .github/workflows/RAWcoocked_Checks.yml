name: Checks

on: [push, pull_request]

jobs:

  Job:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: OS packets
        run: | 
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y valgrind
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install automake truncate
          fi
      - name: FFmpeg
        run: | 
          cd Project/GNU/CLI
          if [ "$RUNNER_OS" == "Linux" ]; then
            git clone --depth=1 https://github.com/FFmpeg/FFmpeg.git
            cd FFmpeg
            ./configure --prefix=.. --disable-doc --disable-x86asm --disable-ffplay --disable-ffprobe --enable-static --disable-everything --enable-protocol=file --enable-indev=lavfi --enable-filter=color,testsrc,anoisesrc,scale,aresample --enable-demuxer=concat,matroska,ffv1,flac,pcm_*,wav,aiff,image2 --enable-muxer=matroska,ffv1,flac,pcm_*,wav,aiff,image2,framemd5 --enable-encoder=rawvideo,dpx,tiff,ffv1,flac,pcm_* --enable-decoder=rawvideo,dpx,tiff,ffv1,flac,pcm_*
            make
            mv ffmpeg ..
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            curl -O "https://evermeet.cx/ffmpeg/$(curl https://evermeet.cx/ffmpeg/ 2>/dev/null | grep -m1 -oe 'ffmpeg-[0-9a-z-]\+.7z')" 2>/dev/null
            7za e *.7z
          fi
      - name: Configure
        run: | 
          cd Project/GNU/CLI
          sh autogen.sh
          ./configure
      - name: Compile
        run: | 
          cd Project/GNU/CLI
          make
      - name: Check files
        run: | 
          cd Project/GNU/CLI
          make clone_testing_files
      - name: Check
        run: | 
          cd Project/GNU/CLI
          make check
